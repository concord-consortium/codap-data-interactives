{
  "testimate": {
    "flags": "ðŸ‡¬ðŸ‡§,ðŸ‡ºðŸ‡¸",
    "language": "English",
    "staticStrings": {
      "outcomePrimaryHint": "outcome/primary attribute",
      "predictorSecondaryHint": "predictor/secondary attribute",
      "emitDetailsSummary" : "emit test results into CODAP",
      "chooseEmitSingleLabel" : "current test",
      "chooseEmitRandomLabel" : "rerandomizing",
      "chooseEmitHierarchyLabel" : "each subgroup",
      "randomEmitNumberBoxLabel" : "times"
    },
    "datasetName" : "tests and estimates",
    "datasetDIV": "Dataset: <strong>â€¢1â€¢</strong>, â€¢2â€¢ cases (â€¢3â€¢)",
    "dropAttributeHere": "drop attribute here",
    "mean": "mean",
    "proportion": "proportion",
    "group": "group",
    "groups": "groups",
    "slope": "slope",
    "intercept": "intercept",
    "value": "value",
    "values": "values",
    "pooled": "pooled",
    "equalize": "equalize",
    "observed": "observed",
    "expected": "expected",
    "count": "count",
    "error": "error",
    "total": "total",
    "iterations": "iterations",
    "showGraph": "show graph",
    "copyFormula": "copy formula",
    "emit": "emit these results",
    "emitRR": "re-randomize and emit â€¢1â€¢x",
    "emitHierarchy": "emit results from â€¢1â€¢ subgroups",
    "at" : "at",
    "rate" : "rate",
    "cost": "cost",
    "notP" : "not â€¢1â€¢",
    "nMore" : "â€¢1â€¢ more",
    "hasRandom" : "has randomness",
    "noRandom" : "no randomness",
    "CI" : "CI",
    "conf" : "conf",
    "Nsided" : "â€¢1â€¢-sided",

    "attributeNames": {
      "N": "N",
      "N1" : "N1",
      "N2": "N2",
      "prop": "prop",
      "prop1": "prop1",
      "prop2": "prop2",
      "P": "P",
      "df": "df",
      "CImin": "CImin",
      "CImax": "CImax",
      "slopeCImin": "slope_CImin",
      "slopeCImax": "slope_CImax",
      "alpha": "alpha",
      "conf": "conf",
      "t": "t",
      "z": "z",
      "chisq": "chisq",
      "F": "F",
      "tCrit": "tCrit",
      "zCrit": "zCrit",
      "chisqCrit": "chisqCrit",
      "FCrit": "FCrit",
      "sign": "sign",
      "value": "value",
      "sides" : "sides",
      "outcome": "outcome",
      "predictor": "predictor",
      "procedure": "procedure",
      "SSR": "SSR",
      "SSE": "SSE",
      "SST": "SST",
      "dfTreatment": "dfTreatment",
      "dfError": "dfError",
      "s": "s",
      "mean": "mean",
      "mean1": "mean1",
      "mean2": "mean2",
      "diff": "diff",
      "pDiff": "diff",
      "SE": "SE",
      "slope" : "slope",
      "intercept" : "intercept",
      "correlation" : "correlation",
      "rho" : "rho",
      "rsq" : "rSquared",
      "pos" : "pos",
      "LSlope" : "slope",
      "cost" : "cost",
      "rate" : "rate",
      "iterations" : "iterations"
    },
    "attributeDescriptions": {
      "N": "the sample size",
      "N1": "the sample size, first group",
      "N2": "the sample size, second group",
      "prop": "the sample proportion you are studying",
      "prop1": "the sample proportion, first group",
      "prop2": "the sample proportion, second group",
      "P": "the \"P-value,\" the probability that, if the null hypothesis were true, we would see a value of the test statistic this extreme.",
      "df": "degrees of freedom",
      "CImin": "the lower bound to the confidence interval",
      "CImax": "the upper bound to the confidence interval",
      "slopeCImin": "the lower bound to the confidence interval for slope",
      "slopeCImax": "the upper bound to the confidence interval for slope",
      "alpha": "the probability we use to decide if a P-value is \"significant.\" Use significance with caution.",
      "conf": "the value, in percent, used to compute the confidence interval",
      "t": "the t statistic: the residual divided by the standard error",
      "z": "the z statistic: the difference from the hypothesized value divided by the sample standard deviation",
      "chisq": "the chi-squared statistic. It measures how far a set of counts is from the \"expected\" value.",
      "F": "the F statistic. It measures how much variation is between groups as opposed to within groups.",
      "tCrit": "a critical value for t: the value that corresponds to the probability alpha",
      "zCrit": "a critical value for z: the value that corresponds to the probability alpha",
      "chisqCrit": "a critical value for chi-squared: the value that corresponds to the probability alpha",
      "FCrit": "a critical value for the F statistic",
      "sign" : "relationship of the test statistic to the value in the box",
      "value": "the hypothesized value you are comparing your test statistic to",
      "sides" : "how many sides in your test? One or two?",
      "outcome": "the name of the left-hand (outcome) variable",
      "predictor": "the name of the right-hand (predictor) variable, even if it's not being used to predict anything",
      "procedure": "what kind of statistical procedure was used",
      "SSR": "the sum of squares of residuals calculated between the groups",
      "SSE": "the sum of squares of errors, that is, calculated within the groups relative to the group means",
      "SST": "the total sum of squares, SSR + SSE",
      "dfTreatment": "the degrees of freedom among the groups, i.e., the number of groups minus one.",
      "dfError": "the degrees of freedom within the groups, a little less than the number of cases.",
      "s": "sample standard deviation",
      "mean": "the mean of the attribute you're looking at",
      "mean1": "the mean of the left attribute",
      "mean2": "the mean of the right attribute",
      "diff": "the difference of means you are studying",
      "pDiff": "the difference of proportions you are studying",
      "SE": "the standard error of the mean (or proportion)",
      "slope" : "the slope of the least-squares line",
      "intercept" : "the intercept of the least-squares line",
      "correlation" : "the correlation between the two attributes",
      "rho" : "the correlation between the two attributes",
      "rsq" : "the square of the correlation coefficient",
      "pos" : "the x-position of the inflection point (P = 1/2)",
      "LSlope" : "the slope of the curve at x = pos",
      "cost" : "the abstract cost of the fit (think sum of squares), to be minimized",
      "rate" : "fit iteration parameter",
      "iterations" : "number of iterations"
    },
    "tips": {
      "equalize": "make all proportions equal"
    },
    "tests": {

      "emitSummary" : "Emit data into CODAP",
      "oneSampleT": {
        "menuString": "mean of â€¢1â€¢",
        "testQuestion": "Is the mean of â€¢1â€¢ â€¢2â€¢ â€¢3â€¢ ?",
        "resultsLine2": "sample mean = â€¢1â€¢, â€¢2â€¢% CI = [â€¢3â€¢, â€¢4â€¢]",
        "configurationStart": "testing mean"
      },
      "paired": {
        "menuString": "paired test of (â€¢1â€¢ â€“ â€¢2â€¢)",
        "testQuestion": "Is the (paired) mean difference of each (â€¢1â€¢ â€“ â€¢2â€¢) â€¢3â€¢ â€¢4â€¢ ?",
        "resultsLine2": "mean paired difference = â€¢1â€¢, â€¢2â€¢% CI = [â€¢3â€¢, â€¢4â€¢]",
        "configurationStart": "paired test: mean of"
      },
      "twoSampleT": {
        "menuString1": "difference of means: â€¢1â€¢ vs â€¢2â€¢",
        "menuString2": "difference of means: â€¢1â€¢ grouped by â€¢2â€¢",
        "testQuestion1": "Is the difference mean(â€¢1â€¢) : group â€¢2â€¢ â€“ group â€¢3â€¢ â€¢4â€¢ ?",
        "testQuestion2": "Is the difference mean(â€¢1â€¢) â€“ mean(â€¢2â€¢) â€¢3â€¢ ?",
        "detailsSummary": "<summary>Difference of means, two-sample <i>t</i> procedure</summary>",
        "configStartPaired" : "testing mean(â€¢1â€¢)",
        "configStart1": "group â€¢1â€¢ â€“ group â€¢2â€¢",
        "configStartUnpaired": "unpaired test"
      },
      "regression": {
        "menuString": "linear regression of (â€¢1â€¢) as a function of (â€¢2â€¢)",
        "testQuestion": "How does (â€¢1â€¢) depend on (â€¢2â€¢) ?",
        "detailsSummary": "<summary>Regression details</summary>",
        "testingSlope": "testing slope"
      },
      "correlation": {
        "menuString": "correlation of (â€¢1â€¢) with (â€¢2â€¢)",
        "testQuestion": "Is the correlation &rho; between (â€¢1â€¢) and (â€¢2â€¢) â€¢3â€¢ â€¢4â€¢?",
        "detailsSummary": "<summary>Correlation details</summary>",
        "testingCorrelation": "testing correlation"
      },
      "oneSampleP": {
        "menuString": "one-sample proportion of â€¢1â€¢ = â€¢2â€¢",
        "testQuestion": "Is the proportion of (â€¢1â€¢ = â€¢2â€¢) â€¢3â€¢ â€¢4â€¢ ?",
        "resultsLine1": "sample proportion = â€¢1â€¢, (â€¢2â€¢ out of N = â€¢3â€¢)",
        "configurationStart": "testing prop",
        "usingZProc" : "using the z procedure",
        "usingBinomialProc" : "using the exact binomial procedure"
      },
      "twoSampleP": {
        "menuString1": "difference of proportions: â€¢1â€¢ vs â€¢2â€¢",
        "menuString2": "difference of proportions: â€¢1â€¢ grouped by â€¢2â€¢",
        "testQuestionHead": "Is the difference of proportions of",
        "detailsSummary": "<summary>Difference of proportions, two-sample <i>z</i> procedure</summary>",
        "configStart": "testing difference of proportions"
      },
      "goodness": {
        "menuString": "goodness of fit for â€¢1â€¢",
        "testQuestion": "Are the proportions of (â€¢1â€¢) as hypothesized?",
        "detailsSummary1": "<summary>Testing goodness of fit, â€¢1â€¢-sided &chi;<sup>2</sup> procedure</summary>",
        "detailsSummary2": "<summary>set hypothesized proportions</summary>",
        "configurationStart": "configure goodness-of-fit test"
      },
      "independence": {
        "menuString": "test independence of â€¢1â€¢ from â€¢2â€¢",
        "testQuestion": "Are (â€¢1â€¢) and (â€¢2â€¢) independent?",
        "detailsSummary": "<summary>Testing independence, â€¢1â€¢-sided &chi;<sup>2</sup> procedure</summary>",
        "configurationStart": "configure test for independence of (â€¢1â€¢) from (â€¢2â€¢)"
      },
      "anova" : {
        "menuString": "ANOVA: â€¢1â€¢ by â€¢2â€¢",
        "testQuestion": "Is the mean of (â€¢1â€¢) the same across (â€¢2â€¢) ?",
        "detailsSummary1": "<summary>Descriptive statistics</summary>",
        "detailsSummary2": "<summary>One-way ANOVA, F procedure</summary>",
        "configStart": "ANOVA on (â€¢1â€¢) across (â€¢2â€¢)",
        "meanOfX": "mean(â€¢1â€¢)"
      },
      "logistic": {
        "menuString": "logistic regression: â€¢1â€¢ as a function of â€¢2â€¢",
        "intro": "This plugin does simple logistic regression",
        "model1": "Model: Probability = 1/2 at â€¢1â€¢ = â€¢2â€¢",
        "model2": "There, slope = â€¢1â€¢",
        "probFunctionHead": "so the probability function is",
        "probQuery1": "Find the probability P(â€¢1â€¢ = â€¢2â€¢)",
        "probQuery2": "at (â€¢1â€¢)",
        "configStart": "Logistic regression predicting prob(â€¢1â€¢ = â€¢2â€¢) from â€¢3â€¢"
      }
    }
  }
}