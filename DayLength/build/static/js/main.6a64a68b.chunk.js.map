{"version":3,"sources":["lib/CodapInterface.ts","lib/codap-helper.ts","geonameSearch.js","day-length-plugin.tsx","index.tsx"],"names":["connection","connectionState","stats","countDiReq","countDiRplSuccess","countDiRplFail","countDiRplTimeout","countCodapReq","countCodapUnhandledReq","countCodapRplSuccess","countCodapRplFail","timeDiFirstReq","timeDiLastReq","timeCodapFirstReq","timeCodapLastReq","config","interactiveState","notificationSubscribers","matchResource","resourceName","resourceSpec","startsWith","notificationHandler","request","callback","action","resource","requestValues","values","returnMessage","success","Date","Array","isArray","handled","some","subscription","result","actionSpec","rtn","handler","ex","forEach","value","operation","codapInterface","init","iConfig","iCallback","this_","this","Promise","resolve","reject","updateFrameReq","name","title","version","dimensions","preventBringToFront","preventDataContextReorg","IframePhoneRpcEndpoint","window","parent","customInteractiveStateHandler","on","getInteractiveState","bind","sendRequest","then","resp","receivedFrame","savedState","updateInteractiveState","stateHandler","error","getConnectionState","getStats","getConfig","iInteractiveState","Object","assign","destroy","message","JSON","stringify","call","response","undefined","handleResponse","rs","os","as","args","prototype","slice","arguments","indexOf","shift","subscriber","push","parseResourceSelector","iResource","selectorRE","split","selector","resourceType","match","exec","test","type","_regeneratorRuntime","e","t","r","n","hasOwnProperty","o","defineProperty","i","Symbol","a","iterator","c","asyncIterator","u","toStringTag","define","enumerable","configurable","writable","wrap","Generator","create","Context","makeInvokeMethod","tryCatch","arg","h","l","f","s","y","GeneratorFunction","GeneratorFunctionPrototype","p","d","getPrototypeOf","v","g","defineIteratorMethods","_invoke","AsyncIterator","invoke","__await","callInvokeWithMethodAndArg","Error","done","method","delegate","maybeInvokeDelegate","sent","_sent","dispatchException","abrupt","return","TypeError","resultName","next","nextLoc","pushTryEntry","tryLoc","catchLoc","finallyLoc","afterLoc","tryEntries","resetTryEntry","completion","reset","isNaN","length","displayName","isGeneratorFunction","constructor","mark","setPrototypeOf","__proto__","awrap","async","keys","reverse","pop","prev","charAt","stop","rval","handle","complete","finish","catch","delegateYield","initializePlugin","_x","_x2","_x3","_initializePlugin","apply","_asyncToGenerator","_callee","pluginName","interfaceConfig","_context","kMinQueryInterval","kDefaultMaxRows","kMinNameLength","kPlaceholderText","kClassGeoNameInput","kClassSelectList","kClassSelectOption","kClassHidden","kClassCandidate","GeonameSearch","attachmentEl","geonamesUser","selectionEventHandler","_classCallCheck","inputEl","selectionListEl","placeList","queryInProgress","timer","_this","handleTimeout","autoComplete","handleKeyDown","ev","selectorHidden","classList","contains","option","querySelector","key","stopPropagation","innerText","selectedPlace","Number","attributes","dataix","selectionHandler","add","blur","currentCandidateEl","currentIx","getAttribute","nextIx","Math","min","nextEl","querySelectorAll","concat","remove","preventDefault","max","clearTimeout","setTimeout","myGeonamesUser","el","document","createElement","setAttribute","addEventListener","select","append","target","_createClass","_geoNameSearch","searchString","maxRows","userClause","maxRowsClause","featureClassClause","languageClause","typeClause","nameRequiredClause","nameClause","url","data","join","fetch","ok","json","totalResultsCount","geonames","map","place","admin","countryCode","adminCode1","countryName","latitude","lat","longitude","lng","containerEl","optionEl","optionEls","ix","String","_autoComplete","_callee2","thisQuery","_context2","geoNameSearch","populateGeoNameSelector","parameters","width","height","datasetParameters","contextName","parentCollectionName","childCollectionName","DayLengthPlugin","_Component","props","_possibleConstructorReturn","_getPrototypeOf","ref","state","loc","long","hasError","React","createRef","getData","_assertThisInitialized","handleLocation","_inherits","_componentDidMount","current","errorInfo","console","log","location","setState","_getData","_callee8","datasetExists","_datasetExists","guaranteeDataset","_guaranteeDataset","getComponentByTypeAndTitleOrName","_getComponentByTypeAndTitleOrName","guaranteeTableOrCardIsVisibleFor","_guaranteeTableOrCardIsVisibleFor","_removeFormulas","addFormulas","_addFormulas","createRequests","year","parentCaseID","getSolarEventsForYear","parentCaseResult","_context8","kDestinationTimezoneOffset","round","jan1","kMSToAdd","getTimezoneOffset","start","getTime","getFullYear","tSunrise","getSunrise","tSunset","getSunset","valueOf","day","sunrise","sunset","_callee7","iDatasetParams","tMsgs","_context7","formula","item","_x8","_callee6","_context6","_x7","_callee5","iName","tTableID","_context5","dataContext","reason","_x6","_callee4","iType","iTitle","tListResult","tID","tFoundValue","_context4","find","iValue","id","_x4","_x5","_callee3","_context3","collections","attrs","precision","unit","hidden","description","iDatasetName","tContextListResult","aContext","_this2","className","onChange","onBlur","onClick","Component","ReactDOM","render","getElementById"],"mappings":"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","file":"static/js/main.6a64a68b.chunk.js","sourcesContent":["// ==========================================================================\n//\n//  Author:   jsandoe\n//\n//  Copyright (c) 2016 by The Concord Consortium, Inc. All rights reserved.\n//\n//  Licensed under the Apache License, Version 2.0 (the \"License\");\n//  you may not use this file except in compliance with the License.\n//  You may obtain a copy of the License at\n//\n//    http://www.apache.org/licenses/LICENSE-2.0\n//\n//  Unless required by applicable law or agreed to in writing, software\n//  distributed under the License is distributed on an \"AS IS\" BASIS,\n//  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n//  See the License for the specific language governing permissions and\n//  limitations under the License.\n// ==========================================================================\n\n/**\n * This class is intended to provide an abstraction layer for managing\n * a CODAP Data Interactive's connection with CODAP. It is not required. It is\n * certainly possible for a data interactive, for example, to use only the\n * iFramePhone library, which manages the connection at a lower level.\n *\n * This object provides the following services:\n *   1. Initiates the iFramePhone interaction with CODAP.\n *   2. Provides information on the status of the connection.\n *   3. Provides a sendRequest method. It accepts a callback or returns a Promise\n *      for handling the results from CODAP.\n *   4. Provides a subscriber interface to receive selected notifications from\n *      CODAP.\n *   5. Provides automatic handling of Data Interactive State. Prior to saving\n *      a document CODAP requests state from the Data Interactive, where state\n *      is an arbitrary serializable object containing whatever the data\n *      interactive needs to retain. It returns this state when the document\n *      is reopened.\n *   6. Provides a utility to parse a resource selector into its component parts.\n *\n * @type {Object}\n *\n */\n\nimport { IframePhoneRpcEndpoint } from 'iframe-phone';\n\n/**\n * The CODAP Connection\n */\nvar connection: { call: (arg0: any, arg1: (response: any) => void) => void; } | null = null;\n\nvar connectionState = 'preinit';\n\nvar stats = {\n  countDiReq: 0,\n  countDiRplSuccess: 0,\n  countDiRplFail: 0,\n  countDiRplTimeout: 0,\n  countCodapReq: 0,\n  countCodapUnhandledReq: 0,\n  countCodapRplSuccess: 0,\n  countCodapRplFail: 0,\n  timeDiFirstReq: (null as Date | null),\n  timeDiLastReq: (null as Date | null),\n  timeCodapFirstReq: (null as Date | null),\n  timeCodapLastReq: (null as Date | null)\n};\n\ninterface IConfig {\n  stateHandler?: (arg0: any) => void;\n  customInteractiveStateHandler?: boolean;\n  name?: any;\n  title?: any;\n  version?: any;\n  dimensions?: any;\n  preventBringToFront?: any;\n  preventDataContextReorg?: any;\n}\n\nvar config: IConfig | null = null;\n\n/**\n * A serializable object shared with CODAP. This is saved as a part of the\n * CODAP document. It is intended for the data interactive's use to store\n * any information it may need to reestablish itself when a CODAP document\n * is saved and restored.\n *\n * This object will be initially empty. It will be updated during the process\n * initiated by the init method if CODAP was started from a previously saved\n * document.\n */\nvar interactiveState = {};\n\n/**\n * A list of subscribers to messages from CODAP\n * @param {[{actionSpec: {RegExp}, resourceSpec: {RegExp}, handler: {function}}]}\n */\nvar notificationSubscribers: { actionSpec: string; resourceSpec: any; operation: any; handler: any; }[] = [];\n\nfunction matchResource(resourceName: any, resourceSpec: string) {\n  return resourceSpec === '*' || resourceName.startsWith(resourceSpec);\n}\n\nfunction notificationHandler (request: { action: any; resource: any; values: any; }, callback: (arg0: { success: boolean; }) => void) {\n  var action = request.action;\n  var resource = request.resource;\n  var requestValues = request.values;\n  var returnMessage = {success: true};\n\n  connectionState = 'active';\n  stats.countCodapReq += 1;\n  stats.timeCodapLastReq = new Date();\n  if (!stats.timeCodapFirstReq) {\n    stats.timeCodapFirstReq = stats.timeCodapLastReq;\n  }\n\n  if (action === 'notify' && !Array.isArray(requestValues)) {\n    requestValues = [requestValues];\n  }\n\n  var handled = false;\n  var success = true;\n\n  if ((action === 'get') || (action === 'update')) {\n    // get assumes only one subscriber because it expects only one response.\n    notificationSubscribers.some(function (subscription) {\n      var result = false;\n      try {\n        if ((subscription.actionSpec === action) &&\n            matchResource(resource, subscription.resourceSpec)) {\n          var rtn = subscription.handler(request);\n          if (rtn && rtn.success) { stats.countCodapRplSuccess++; } else{ stats.countCodapRplFail++; }\n          returnMessage = rtn;\n          result = true;\n        }\n      } catch (ex) {\n        // console.log('DI Plugin notification handler exception: ' + ex);\n        result = true;\n      }\n      return result;\n    });\n    if (!handled) {\n      stats.countCodapUnhandledReq++;\n    }\n  } else if (action === 'notify') {\n    requestValues.forEach(function (value: { operation: any; }) {\n      notificationSubscribers.forEach(function (subscription) {\n        // pass this notification to matching subscriptions\n        handled = false;\n        if ((subscription.actionSpec === action) && matchResource(resource,\n                subscription.resourceSpec) && (!subscription.operation ||\n            (subscription.operation === value.operation) && subscription.handler)) {\n          var rtn = subscription.handler(\n              {action: action, resource: resource, values: value});\n          if (rtn && rtn.success) { stats.countCodapRplSuccess++; } else{ stats.countCodapRplFail++; }\n          success = (success && (rtn ? rtn.success : false));\n          handled = true;\n        }\n      });\n      if (!handled) {\n        stats.countCodapUnhandledReq++;\n      }\n    });\n  } else {\n    // console.log(\"DI Plugin received unknown message: \" + JSON.stringify(request));\n  }\n  return callback(returnMessage);\n}\n\nconst codapInterface = {\n  /**\n   * Connection statistics\n   */\n  stats: stats,\n\n  /**\n   * Initialize connection.\n   *\n   * Start connection. Request interactiveFrame to get prior state, if any.\n   * Update interactive frame to set name and dimensions and other configuration\n   * information.\n   *\n   * @param iConfig {object} Configuration. Optional properties: title {string},\n   *                        version {string}, dimensions {object}\n   *\n   * @param iCallback {function(interactiveState)}\n   * @return {Promise} Promise of interactiveState;\n   */\n  init: function (iConfig: IConfig, iCallback?: (arg0: any) => void) {\n    var this_ = this;\n    return new Promise(function (resolve: (arg0: any) => void, reject: { (arg0: string): void; (arg0: any): void; }) {\n      function getFrameRespHandler(resp: { values: { error: any; savedState: any }; success: boolean }[]) {\n        var success = resp && resp[1] && resp[1].success;\n        var receivedFrame = success && resp[1].values;\n        var savedState = receivedFrame && receivedFrame.savedState;\n        this_.updateInteractiveState(savedState);\n        if (success) {\n          // deprecated way of conveying state\n          if (iConfig.stateHandler) {\n            iConfig.stateHandler(savedState);\n          }\n          resolve(savedState);\n        } else {\n          if (!resp) {\n            reject('Connection request to CODAP timed out.');\n          } else {\n            reject(\n                (resp[1] && resp[1].values && resp[1].values.error) ||\n                'unknown failure');\n          }\n        }\n        if (iCallback) {\n          iCallback(savedState);\n        }\n      }\n\n      var getFrameReq = {action: 'get', resource: 'interactiveFrame'};\n      var newFrame = {\n        name: iConfig.name,\n        title: iConfig.title,\n        version: iConfig.version,\n        dimensions: iConfig.dimensions,\n        preventBringToFront: iConfig.preventBringToFront,\n        preventDataContextReorg: iConfig.preventDataContextReorg\n      };\n      var updateFrameReq = {\n        action: 'update',\n        resource: 'interactiveFrame',\n        values: newFrame\n      };\n\n      config = iConfig;\n\n      // initialize connection\n      connection = new IframePhoneRpcEndpoint(\n          notificationHandler, \"data-interactive\", window.parent);\n\n      if (!config.customInteractiveStateHandler) {\n        this_.on('get', 'interactiveState', function () {\n          return ({success: true, values: this_.getInteractiveState()});\n        }.bind(this_));\n      }\n\n      // console.log('sending interactiveState: ' + JSON.stringify(this_.getInteractiveState));\n      // update, then get the interactiveFrame.\n      return this_.sendRequest([updateFrameReq, getFrameReq])\n        .then(getFrameRespHandler as any, reject);\n    }.bind(this));\n  },\n\n  /**\n   * Current known state of the connection\n   */\n  getConnectionState: function () {return connectionState;},\n\n  getStats: function () {\n    return stats;\n  },\n\n  getConfig: function () {\n    return config;\n  },\n\n  /**\n   * Returns the interactive state.\n   *\n   * @returns {object}\n   */\n  getInteractiveState: function () {\n    return interactiveState;\n  },\n\n  /**\n   * Updates the interactive state.\n   * @param iInteractiveState {Object}\n   */\n  updateInteractiveState: function (iInteractiveState: any) {\n    if (!iInteractiveState) {\n      return;\n    }\n    interactiveState = Object.assign(interactiveState, iInteractiveState);\n  },\n\n  destroy: function () {\n    // todo : more to do?\n    connection = null;\n  },\n\n  /**\n   * Sends a request to CODAP. The format of the message is as defined in\n   * {@link https://github.com/concord-consortium/codap/wiki/CODAP-Data-Interactive-API}.\n   *\n   * @param message {String}\n   * @param callback {function(response, request)} Optional callback to handle\n   *    the CODAP response. Note both the response and the initial request will\n   *    sent.\n   *\n   * @return {Promise} The promise of the response from CODAP.\n   */\n  sendRequest: function (message: any, callback?: any) {\n    return new Promise(function (resolve, reject){\n      function handleResponse (request: any, response: {success: boolean} | undefined, callback: (arg0: any, arg1: any) => void) {\n        if (response === undefined) {\n          // console.warn('handleResponse: CODAP request timed out');\n          reject('handleResponse: CODAP request timed out: ' + JSON.stringify(request));\n          stats.countDiRplTimeout++;\n        } else {\n          connectionState = 'active';\n          if (response.success) { stats.countDiRplSuccess++; } else { stats.countDiRplFail++; }\n          resolve(response);\n        }\n        if (callback) {\n          callback(response, request);\n        }\n      }\n      switch (connectionState) {\n        case 'closed': // log the message and ignore\n          // console.warn('sendRequest on closed CODAP connection: ' + JSON.stringify(message));\n          reject('sendRequest on closed CODAP connection: ' + JSON.stringify(message));\n          break;\n        case 'preinit': // warn, but issue request.\n          // console.log('sendRequest on not yet initialized CODAP connection: ' +\n              // JSON.stringify(message));\n          /* falls through */\n        default:\n          if (connection) {\n            stats.countDiReq++;\n            stats.timeDiLastReq = new Date();\n            if (!stats.timeDiFirstReq) {\n              stats.timeCodapFirstReq = stats.timeDiLastReq;\n            }\n\n            connection.call(message, function (response: any) {\n              handleResponse(message, response, callback);\n            });\n          } else {\n            // console.error('sendRequest on non-existent CODAP connection');\n          }\n      }\n    });\n  },\n\n  /**\n   * Registers a handler to respond to CODAP-initiated requests and\n   * notifications. See {@link https://github.com/concord-consortium/codap/wiki/CODAP-Data-Interactive-API#codap-initiated-actions}\n   *\n   * @param actionSpec {'get' || 'notify'} (optional) Action to handle. Defaults to 'notify'.\n   * @param resourceSpec {String} A resource string.\n   * @param operation {String} (optional) name of operation, e.g. 'create', 'delete',\n   *   'move', 'resize', .... If not specified, all operations will be reported.\n   * @param handler {Function} A handler to receive the notifications.\n   */\n  on: function (actionSpec: string, resourceSpec: string, operation: string | (() => void), handler?: (...args:any) => void) {\n    var as = 'notify',\n        rs,\n        os,\n        hn;\n    var args = Array.prototype.slice.call(arguments);\n    if (['get', 'update', 'notify'].indexOf(args[0]) >= 0) {\n      as = args.shift();\n    }\n    rs = args.shift();\n    if (typeof args[0] !== 'function') {\n      os = args.shift();\n    }\n    hn = args.shift();\n\n    const subscriber = {\n      actionSpec: as,\n      resourceSpec: rs,\n      operation: os,\n      handler: hn\n    };\n\n    notificationSubscribers.push(subscriber);\n  },\n\n  /**\n   * Parses a resource selector returning a hash of named resource names to\n   * resource values. The last clause is identified as the resource type.\n   * E.g. converts 'dataContext[abc].collection[def].case'\n   * to {dataContext: 'abc', collection: 'def', type: 'case'}\n   *\n   * @param {String} iResource\n   * @return {Object}\n   */\n  parseResourceSelector: function (iResource: string) {\n    var selectorRE = /([A-Za-z0-9_-]+)\\[([^\\]]+)]/;\n    var result: any = {};\n    var selectors = iResource.split('.');\n    selectors.forEach(function (selector: string) {\n      var resourceType, resourceName;\n      var match = selectorRE.exec(selector);\n      if (selectorRE.test(selector) && match) {\n        resourceType = match[1];\n        resourceName = match[2];\n        result[resourceType] = resourceName;\n        result.type = resourceType;\n      } else {\n        result.type = selector;\n      }\n    });\n\n    return result;\n  }\n};\n\nexport default codapInterface;","import codapInterface from \"./CodapInterface\";\n\nexport async function initializePlugin(pluginName: string, version: string, dimensions: {width: number, height: number}) {\n  const interfaceConfig = {\n    name: pluginName,\n    version: version,\n    dimensions: dimensions\n  };\n  await codapInterface.init(interfaceConfig);\n}\n\nconst dataSetString = (contextName: string) => `dataContext[${contextName}]`;\n\n","// ==========================================================================\n//  \n//  Author:   jsandoe\n//\n//  Copyright (c) 2020 by The Concord Consortium, Inc. All rights reserved.\n//\n//  Licensed under the Apache License, Version 2.0 (the \"License\");\n//  you may not use this file except in compliance with the License.\n//  You may obtain a copy of the License at\n//\n//    http://www.apache.org/licenses/LICENSE-2.0\n//\n//  Unless required by applicable law or agreed to in writing, software\n//  distributed under the License is distributed on an \"AS IS\" BASIS,\n//  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n//  See the License for the specific language governing permissions and\n//  limitations under the License.\n// ==========================================================================\n\nconst kGeonamesService = 'https://secure.geonames.org/search'\nconst kMinQueryInterval = 800;\nconst kDefaultMaxRows = 5;\nconst kMinNameLength = 3;\n\nconst kPlaceholderText = 'city, state or country';\n\nconst kClassGeoNameInput = 'geo-name-select';\nconst kClassSelectList = 'geoname-selection-list';\nconst kClassSelectOption = 'geoname-selector-option';\nconst kClassHidden = 'geoname-hidden';\nconst kClassCandidate = 'geoname-candidate';\n\n// noinspection JSIgnoredPromiseFromCall\nclass GeonameSearch {\n  myGeonamesUser;\n  selectionHandler;\n\n  // @type {DOMElement}\n  inputEl = null; // the selection text element\n  // @type {DOMElement}\n  selectionListEl = null; // the initially hidden selection list element\n\n  placeList = [];\n  selectedPlace;\n\n  queryInProgress = false;\n  timer = null;\n\n\n  /**\n   * Formats and ends a query to geonames.org.\n   * API is documented here: https://www.geonames.org/export/geonames-search.html\n   * @param searchString {string} free form city, state\n   * @param [maxRows] {number} number of results\n   * @return {Promise<Uint8Array|BigInt64Array|{latitude: *, name: string, longitude: *}[]|Float64Array|Int8Array|Float32Array|Int32Array|Uint32Array|Uint8ClampedArray|BigUint64Array|Int16Array|Uint16Array>}\n   */\n  async geoNameSearch(searchString, maxRows) {\n    const userClause = `username=${this.myGeonamesUser}`;\n    // const countryClause = 'country=US';\n    const maxRowsClause = `maxRows=${maxRows || kDefaultMaxRows}`;\n    const featureClassClause = 'featureClass=P'; // populated places\n    // const orderByClause = 'orderby=relevance'\n    const languageClause = 'lang=en';\n    const typeClause = 'type=json';\n    const nameRequiredClause = 'isNameRequired=true';\n\n    // let nameClause = `q=${searchString}`;\n    let nameClause = `name_startsWith=${searchString}`;\n    let url = `${kGeonamesService}?${[userClause, /*countryClause, */maxRowsClause, /*orderByClause, */featureClassClause, languageClause, typeClause, nameRequiredClause, nameClause].join(\n        '&')}`;\n    let response = await fetch(url);\n    if (response.ok) {\n      let data = await response.json();\n      if (data.totalResultsCount > 0) {\n        // console.log(JSON.stringify(data));\n        return data.geonames.map(function (place) {\n          const admin = place.countryCode === 'US' ? place.adminCode1 : place.countryName\n          return {\n            name: `${place.name}, ${admin}`,\n            latitude: place.lat,\n            longitude: place.lng\n          };\n        });\n      }\n    }\n  }\n\n  /**\n   * Populates the selector list with place names.\n   *\n   * Creates elements if they don't exist. Hides them if they are unneeded\n   * for current list.\n   * @param containerEl {Element} The element that will contain the option list.\n   * @param placeList {[Object]} A list of objects. The name property of each\n   * object should be displayed.\n   */\n  populateGeoNameSelector(containerEl, placeList) {\n    if (!this.placeList || !this.placeList.length) {\n      return;\n    }\n    let optionEls = containerEl.querySelectorAll('.' + kClassSelectOption);\n    containerEl.classList.remove(kClassHidden);\n    let optionEl;\n    optionEls.forEach(function (el) {\n      el.classList.add(kClassHidden);\n    });\n    placeList.forEach(function (place, ix) {\n      if (optionEls && optionEls[ix]) {\n        optionEl = optionEls[ix];\n        optionEl.classList.remove(kClassHidden);\n        optionEl.classList.remove(kClassCandidate);\n      } else {\n        optionEl = document.createElement('div');\n        optionEl.classList.add(kClassSelectOption);\n        containerEl.append(optionEl);\n      }\n      optionEl.innerText = place.name;\n      optionEl.setAttribute('dataix', String(ix));\n      if (ix === 0) {\n        optionEl.classList.add(kClassCandidate);\n      }\n    });\n  }\n\n  /**\n   * Fetch selection list of candidate places.\n   * @return {Promise<void>}\n   */\n  async autoComplete() {\n    let thisQuery = this.inputEl.value;\n    try {\n      this.queryInProgress = true;\n      let placeList = await this.geoNameSearch(thisQuery);\n      this.placeList = placeList || [];\n      this.populateGeoNameSelector(this.selectionListEl, this.placeList);\n    } finally {\n      this.queryInProgress = false;\n    }\n  }\n\n  /**\n   * Constructs the class.\n   * @param attachmentEl {Element}\n   * @param geonamesUser {String}\n   * @param selectionEventHandler {function} Callback\n   */\n  constructor(attachmentEl, geonamesUser, selectionEventHandler) {\n    let _this = this;\n\n    function handleTimeout(/*ev*/) {\n      _this.timer = null;\n      // noinspection JSIgnoredPromiseFromCall\n      _this.autoComplete();\n    }\n\n    /**\n     * Handle a change to the text input.\n     *\n     * @param ev\n     */\n    function handleKeyDown(ev) {\n      let selectorHidden = _this.selectionListEl.classList.contains(kClassHidden);\n      let option = _this.selectionListEl.querySelector('.' + kClassCandidate);\n      if (ev.key === 'Enter') {\n        if (selectorHidden) {\n          _this.autoComplete();\n          ev.stopPropagation();\n        } else {\n          if (option) {\n            _this.inputEl.value = option.innerText;\n            _this.selectedPlace = _this.placeList[Number(option.attributes.dataix.value)];\n            _this.selectionHandler(_this.selectedPlace);\n            _this.selectionListEl.classList.add(kClassHidden);\n          }\n        }\n        _this.inputEl.blur()\n      } else if (ev.key === 'ArrowDown') {\n        if (!selectorHidden) {\n          let currentCandidateEl = _this.selectionListEl.querySelector('.' + kClassCandidate );\n          let currentIx = currentCandidateEl && currentCandidateEl.getAttribute('dataix');\n          let nextIx = (currentIx != null) && Math.min(Number(currentIx) + 1, kDefaultMaxRows);\n          if (nextIx && Number(currentIx) !== nextIx) {\n            let optionEls = _this.selectionListEl.querySelectorAll(`.${kClassSelectOption}`);\n            let nextEl = optionEls[nextIx];\n            if ((nextEl != null)\n                && (nextEl !== currentCandidateEl)\n                && !nextEl.classList.contains(kClassHidden)) {\n              currentCandidateEl.classList.remove(kClassCandidate);\n              nextEl.classList.add(kClassCandidate);\n              ev.stopPropagation();\n              ev.preventDefault();\n            }\n          }\n        }\n      } else if (ev.key === 'ArrowUp') {\n        if (!selectorHidden) {\n          let currentCandidateEl = _this.selectionListEl.querySelector('.' + kClassCandidate );\n          let currentIx = currentCandidateEl && currentCandidateEl.getAttribute('dataix');\n          let nextIx = (currentIx != null) && Math.max(Number(currentIx) - 1, 0);\n          if ((nextIx != null) && Number(currentIx) !== nextIx) {\n            let optionEls = _this.selectionListEl.querySelectorAll(`.${kClassSelectOption}`);\n            let nextEl = optionEls[nextIx];\n            if ((nextEl != null)\n                && (nextEl !== currentCandidateEl)\n                && !nextEl.classList.contains(kClassHidden)) {\n              currentCandidateEl.classList.remove(kClassCandidate);\n              nextEl.classList.add(kClassCandidate);\n              ev.stopPropagation();\n              ev.preventDefault();\n            }\n          }\n        }\n      } else {\n        let value = this.value;\n        _this.selectedPlace = null;\n        if (value.length >= kMinNameLength) {\n          if (_this.timer) {\n            clearTimeout(_this.timer);\n          }\n          _this.timer = setTimeout(handleTimeout, kMinQueryInterval);\n        }\n      }\n    }\n\n    function handlePlaceNameSelection(ev) {\n      let target = ev.target;\n      if (target.classList.contains(kClassSelectOption)) {\n        _this.inputEl.value = target.innerText;\n        _this.selectedPlace = _this.placeList[Number(target.attributes.dataix.value)];\n        _this.selectionHandler(_this.selectedPlace);\n      }\n      this.classList.add(kClassHidden);\n    }\n\n    function handleHover(ev) {\n      let target = ev.target;\n      if (target.classList.contains(kClassSelectOption)) {\n        _this.selectionListEl.querySelectorAll('.' + kClassCandidate).forEach(function (el) {\n          el.classList.remove(kClassCandidate);\n        });\n        target.classList.add(kClassCandidate);\n        ev.stopPropagation();\n      }\n    }\n\n    this.selectionHandler = selectionEventHandler;\n    this.myGeonamesUser = geonamesUser;\n\n    // create the input element and selection menu as children of the\n    // attachmentElement\n    let el = document.createElement('input');\n    el.classList.add(kClassGeoNameInput);\n    el.setAttribute('type', 'text');\n    el.setAttribute('placeholder', kPlaceholderText);\n    el.addEventListener('keydown', handleKeyDown);\n    el.addEventListener('focus', ()=>{_this.inputEl.select()});\n    this.inputEl = el;\n    attachmentEl.append(el);\n    el = document.createElement('div');\n    el.classList.add(kClassSelectList);\n    el.classList.add(kClassHidden);\n    el.addEventListener('mouseover', handleHover)\n    el.addEventListener('click', handlePlaceNameSelection)\n    el.addEventListener('keydown', handleKeyDown);\n    this.selectionListEl = el;\n    attachmentEl.append(el);\n  }\n}\n\nexport {\n  GeonameSearch\n}\n","// ==========================================================================\n//\n//  Author:   wfinzer\n//\n//  Copyright (c) 2021 by The Concord Consortium, Inc. All rights reserved.\n//\n//  Licensed under the Apache License, Version 2.0 (the \"License\");\n//  you may not use this file except in compliance with the License.\n//  You may obtain a copy of the License at\n//\n//    http://www.apache.org/licenses/LICENSE-2.0\n//\n//  Unless required by applicable law or agreed to in writing, software\n//  distributed under the License is distributed on an \"AS IS\" BASIS,\n//  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n//  See the License for the specific language governing permissions and\n//  limitations under the License.\n// ==========================================================================\n\nimport React, {useRef, Component, ErrorInfo} from 'react';\nimport {initializePlugin} from './lib/codap-helper';\nimport './day-length-plugin.css';\nimport {getSunrise, getSunset} from 'sunrise-sunset-js';\nimport codapInterface from \"./lib/CodapInterface\";\nimport {GeonameSearch} from \"./geonameSearch\";\n\nconst parameters = {\n\tname: 'Day Length',\n\tversion: '1.00',\n\tinitialDimensions: {\n\t\twidth: 280,\n\t\theight: 385\n\t}\n}\n\nconst datasetParameters = {\n\tcontextName: 'Sunrise and Sunset by Location',\n\tparentCollectionName: 'Locations',\n\tchildCollectionName: 'Days'\n}\n\nclass DayLengthPlugin extends Component<{},\n\t{\n\t\tloc: string,\n\t\tlat: number | string | undefined\n\t\tlong: number | string | undefined\n\t\thasError: boolean,\n\t}> {\n\t[key: string]: any\n\n\tref: any\n\n\t// ref: React.RefObject<Element> | null = null\n\n\tconstructor(props: any) {\n\t\tsuper(props);\n\t\tthis.state = {\n\t\t\tloc: '',\n\t\t\tlat: undefined,\n\t\t\tlong: undefined,\n\t\t\thasError: false\n\t\t}\n\t\tthis.ref = React.createRef();\n\t\tthis.getData = this.getData.bind(this)\n\t\tthis.handleLocation = this.handleLocation.bind(this)\n\t}\n\n\tasync componentDidMount() {\n\t\tawait initializePlugin(parameters.name, parameters.version, parameters.initialDimensions);\n\t\t// @ts-ignore\n\t\tif (this.ref)\n\t\t\tnew GeonameSearch(this.ref.current, 'codap', this.handleLocation)\n\t}\n\n\tcomponentDidCatch(error: Error, errorInfo: ErrorInfo) {\n\t\t// You can also log the error to an error reporting service\n\t\tconsole.log(error, errorInfo);\n\t}\n\n\thandleLocation(location: { latitude: number, longitude: number, name: string }) {\n\t\tthis.setState({lat: location.latitude, long: location.longitude, loc: location.name})\n\t}\n\n\tasync getData() {\n\n\t\tasync function datasetExists(iDatasetName: string): Promise<boolean> {\n\t\t\tconst tContextListResult: any = await codapInterface.sendRequest({\n\t\t\t\t\"action\": \"get\",\n\t\t\t\t\"resource\": \"dataContextList\"\n\t\t\t}).catch((reason) => {\n\t\t\t\tconsole.log('unable to get datacontext list because ' + reason);\n\t\t\t});\n\t\t\treturn tContextListResult.values.some((aContext: any) => aContext.name === iDatasetName)\n\t\t}\n\n\t\tasync function guaranteeDataset(iDatasetParams: any) {\n\t\t\tif (!await datasetExists(iDatasetParams.contextName)) {\n\t\t\t\tawait codapInterface.sendRequest({\n\t\t\t\t\taction: 'create',\n\t\t\t\t\tresource: 'dataContext',\n\t\t\t\t\tvalues: {\n\t\t\t\t\t\tname: iDatasetParams.contextName,\n\t\t\t\t\t\ttitle: iDatasetParams.contextName,\n\t\t\t\t\t\tcollections: [{\n\t\t\t\t\t\t\tname: iDatasetParams.parentCollectionName,\n\t\t\t\t\t\t\ttitle: iDatasetParams.parentCollectionName,\n\t\t\t\t\t\t\tattrs: [\n\t\t\t\t\t\t\t\t{name: 'location'},\n\t\t\t\t\t\t\t\t{name: 'latitude', type: 'categorical', precision: 2},\n\t\t\t\t\t\t\t\t{name: 'longitude', type: 'categorical', precision: 2}\n\t\t\t\t\t\t\t]\n\t\t\t\t\t\t},\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\tname: iDatasetParams.childCollectionName,\n\t\t\t\t\t\t\t\ttitle: iDatasetParams.childCollectionName,\n\t\t\t\t\t\t\t\tparent: iDatasetParams.parentCollectionName,\n\t\t\t\t\t\t\t\tattrs: [\n\t\t\t\t\t\t\t\t\t{name: 'day', type: 'date', precision: 'day'},\n\t\t\t\t\t\t\t\t\t{name: 'day length', type: 'numeric', unit: 'hours', precision: 3},\n\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\tname: 'sunrise',\n\t\t\t\t\t\t\t\t\t\ttype: 'date',\n\t\t\t\t\t\t\t\t\t\tprecision: 'minute',\n\t\t\t\t\t\t\t\t\t\thidden: true,\n\t\t\t\t\t\t\t\t\t\tdescription: 'Note that time is for the timezone of your browser'\n\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\tname: 'sunset',\n\t\t\t\t\t\t\t\t\t\ttype: 'date',\n\t\t\t\t\t\t\t\t\t\tprecision: 'minute',\n\t\t\t\t\t\t\t\t\t\thidden: true,\n\t\t\t\t\t\t\t\t\t\tdescription: 'Note that time is for the timezone of your browser'\n\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\tname: 'rise hour',\n\t\t\t\t\t\t\t\t\t\tunit: 'decimal hours',\n\t\t\t\t\t\t\t\t\t\tdescription: 'Note that time is for the timezone of your browser'\n\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\tname: 'set hour',\n\t\t\t\t\t\t\t\t\t\tunit: 'decimal hours',\n\t\t\t\t\t\t\t\t\t\tdescription: 'Note that time is for the timezone of your browser'\n\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t\t// {name: 'state'}\n\t\t\t\t\t\t\t\t]\n\t\t\t\t\t\t\t}]\n\t\t\t\t\t}\n\t\t\t\t})\n\t\t\t}\n\t\t}\n\n\t\tasync function getComponentByTypeAndTitleOrName(iType: string, iTitle: string, iName?: string): Promise<number> {\n\t\t\tconst tListResult: any = await codapInterface.sendRequest(\n\t\t\t\t{\n\t\t\t\t\taction: 'get',\n\t\t\t\t\tresource: `componentList`\n\t\t\t\t}\n\t\t\t)\n\t\t\t\t.catch(() => {\n\t\t\t\t\tconsole.log('Error getting component list')\n\t\t\t\t});\n\t\t\tlet tID = -1;\n\t\t\tif (tListResult.success) {\n\t\t\t\tlet tFoundValue = tListResult.values.find((iValue: any) => {\n\t\t\t\t\treturn iValue.type === iType && (iValue.title === iTitle || iValue.name === iName);\n\t\t\t\t});\n\t\t\t\tif (tFoundValue)\n\t\t\t\t\ttID = tFoundValue.id;\n\t\t\t}\n\t\t\treturn tID;\n\t\t}\n\n\t\t/**\n\t\t * Find the case table or case card corresponding to the given dataset\n\t\t * @param iDatasetInfo\n\t\t */\n\t\tasync function guaranteeTableOrCardIsVisibleFor(iName: string) {\n\t\t\tif (iName !== '') {\n\t\t\t\tconst tTableID = await getComponentByTypeAndTitleOrName('caseTable', iName),\n\t\t\t\t\ttFoundTable = tTableID >= 0\n\t\t\t\tif (!tFoundTable) {\n\t\t\t\t\tconst tResult: any = await codapInterface.sendRequest({\n\t\t\t\t\t\taction: 'create',\n\t\t\t\t\t\tresource: `component`,\n\t\t\t\t\t\tvalues: {\n\t\t\t\t\t\t\ttype: 'caseTable',\n\t\t\t\t\t\t\tname: iName,\n\t\t\t\t\t\t\ttitle: iName,\n\t\t\t\t\t\t\tdimensions: {width: 572, height: 200},\n\t\t\t\t\t\t\tdataContext: iName\n\t\t\t\t\t\t}\n\t\t\t\t\t}).catch((reason) => {\n\t\t\t\t\t\tconsole.log(JSON.stringify(reason))\n\t\t\t\t\t})\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tasync function removeFormulas(iDatasetParams: any) {\n\t\t\tconst tMsgs = ['day length', 'rise hour', 'set hour', /*'state'*/].map(name => {\n\t\t\t\treturn {\n\t\t\t\t\t\"action\": \"update\",\n\t\t\t\t\t\"resource\": `dataContext[${iDatasetParams.contextName}].collection[${iDatasetParams.childCollectionName}].attribute[${name}]`,\n\t\t\t\t\tvalues: {\n\t\t\t\t\t\tformula: ''\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t})\n\t\t\tawait codapInterface.sendRequest(tMsgs)\n\t\t}\n\n\t\tasync function addFormulas(iDatasetParams: any) {\n\t\t\tconst tMsgs = [\n\t\t\t\t{name: 'day length', formula: `(sunset-sunrise)/3600 > 0 ? (sunset-sunrise)/3600 : (sunset-sunrise)/3600 + 24`},\n\t\t\t\t{name: 'rise hour', formula: 'hours(sunrise)+minutes(sunrise)/60'},\n\t\t\t\t{name: 'set hour', formula: 'hours(sunset)+minutes(sunset)/60'},\n\t\t\t\t{name: 'state', formula: ''},\n\t\t\t\t/*\t\t\t\t{name: 'state', formula: `isMissing(sunrise) ?\n\t\t\t\tcaseIndex=1 ? (latitude>0 ? 'dark' : 'light') :\n\t\t\t\tisMissing(prev(sunrise)) ? prev(state) :\n\t\t\t\tprev(\\`rise hour\\`) < 6 ? 'light' :\n\t\t\t\tprev(\\`rise hour\\`) > 6 ? 'dark' :\n\t\t\t\tprev(state) : 'normal'`}*/].map(item => {\n\t\t\t\treturn {\n\t\t\t\t\t\"action\": \"update\",\n\t\t\t\t\t\"resource\": `dataContext[${iDatasetParams.contextName}].collection[${iDatasetParams.childCollectionName}].attribute[${item.name}]`,\n\t\t\t\t\tvalues: {\n\t\t\t\t\t\tformula: item.formula\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t})\n\t\t\tawait codapInterface.sendRequest(tMsgs)\n\t\t}\n\n\t\tconst this_ = this,\n\t\t\tcreateRequests: {}[] = [],\n\t\t\tyear = new Date().getFullYear()\n\t\tlet parentCaseID: number = 0\n\n\t\tfunction getSolarEventsForYear() {\n\t\t\tconst kDestinationTimezoneOffset = Math.round(Number(this_.state.long) / 15) * 60,\t// 15° per hour. Result is in minutes\n\t\t\t\tjan1 = new Date(year, 0, 1),\n\t\t\t\tkLocalTimezoneOffset = jan1.getTimezoneOffset(),\t// This is in minutes\n\t\t\t\tkMSToAdd = (kDestinationTimezoneOffset + kLocalTimezoneOffset) * 60000,\n\t\t\t\tstart = jan1.getTime();\n\t\t\tconsole.log('kHoursToAdd =', kMSToAdd);\n\t\t\tfor (let i = 0; i < 366; i++) {\n\t\t\t\tconst d = new Date(start + (i * 24 * 60 * 60 * 1000));\n\t\t\t\tif (d.getFullYear() > year) break; // For non-leap year\n\t\t\t\tlet tSunrise: Date | string = getSunrise(Number(this_.state.lat), Number(this_.state.long), d),\n\t\t\t\t\ttSunset: Date | string = getSunset(Number(this_.state.lat), Number(this_.state.long), d)\n\t\t\t\tif (String(tSunrise) === 'Invalid Date' || String(tSunset) === 'Invalid Date') {\n\t\t\t\t\ttSunset = ''\n\t\t\t\t\ttSunrise = ''\n\t\t\t\t} else {\n\t\t\t\t\ttSunset = new Date(tSunset.valueOf() + kMSToAdd)\n\t\t\t\t\ttSunrise = new Date(tSunrise.valueOf() + kMSToAdd)\n\t\t\t\t}\n\t\t\t\tcreateRequests.push({\n\t\t\t\t\t// @ts-ignore\n\t\t\t\t\tparent: parentCaseID,\n\t\t\t\t\tvalues: {\n\t\t\t\t\t\tday: d,\n\t\t\t\t\t\tsunrise: tSunrise,\n\t\t\t\t\t\tsunset: tSunset\n\t\t\t\t\t}\n\t\t\t\t});\n\t\t\t}\n\t\t}\n\n\t\tif (this.state.lat !== 999 && this.state.long !== 999) {\n\t\t\tawait guaranteeDataset(datasetParameters)\n\t\t\tawait guaranteeTableOrCardIsVisibleFor(datasetParameters.contextName)\n\t\t\tawait addFormulas(datasetParameters)\n\t\t\tconst parentCaseResult: any = await codapInterface.sendRequest({\n\t\t\t\taction: 'create',\n\t\t\t\tresource: `dataContext[${datasetParameters.contextName}].collection[${datasetParameters.parentCollectionName}].case`,\n\t\t\t\tvalues: {\n\t\t\t\t\tvalues: {\n\t\t\t\t\t\tlocation: this.state.loc,\n\t\t\t\t\t\tlatitude: this.state.lat,\n\t\t\t\t\t\tlongitude: this.state.long\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t})\n\t\t\tparentCaseID = parentCaseResult.values[0].id\n\t\t\tgetSolarEventsForYear()\n\t\t\tawait codapInterface.sendRequest({\n\t\t\t\taction: 'create',\n\t\t\t\tresource: `dataContext[${datasetParameters.contextName}].collection[${datasetParameters.childCollectionName}].case`,\n\t\t\t\tvalues: createRequests\n\t\t\t})\n\t\t\t// await addFormulas(datasetParameters)\n\t\t}\n\t}\n\n\tpublic render() {\n\t\tif (this.state.hasError) {\n\t\t\treturn <h1>Something went wrong!</h1>\n\t\t}\n\t\treturn (\n\t\t\t<div className=\"DayLengthPlugin\">\n\t\t\t\t<h2>How Long Is a Day?</h2>\n\t\t\t\t<p>Enter a location by typing the name of a city or town and choosing from the list.\n\t\t\t\t\tOr type in a latitude and longitude directly. Press Get Data.\n\t\t\t\t\tThe resulting dataset shows a full year’s worth of day length, rise hour and set hour.</p>\n\t\t\t\t<div className='input'>\n\t\t\t\t\t<label>\n\t\t\t\t\t\tLocation: <div id=\"geonameContainer\" ref={this.ref}></div>\n\t\t\t\t\t</label>\n\t\t\t\t\t<label>\n\t\t\t\t\t\tLatitude:\n\t\t\t\t\t\t<input type='text' value={this.state.lat}\n\t\t\t\t\t\t\t\t\t onChange={(e) => this.setState({lat: e.target.value})}\n\t\t\t\t\t\t\t\t\t onBlur={(e) => this.setState({lat: Number(e.target.value)})}\n\t\t\t\t\t\t/>\n\t\t\t\t\t</label>\n\t\t\t\t\t<br/>\n\t\t\t\t\t<label>\n\t\t\t\t\t\tLongitude:\n\t\t\t\t\t\t<input type='text' value={this.state.long}\n\t\t\t\t\t\t\t\t\t onChange={(e) => this.setState({long: Number(e.target.value)})}\n\t\t\t\t\t\t\t\t\t onBlur={(e) => this.setState({long: Number(e.target.value)})}\n\t\t\t\t\t\t/>\n\t\t\t\t\t</label>\n\t\t\t\t\t<br/>\n\t\t\t\t\t<button onClick={this.getData}>\n\t\t\t\t\t\tGet Data\n\t\t\t\t\t</button>\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t);\n\t}\n\n}\n\nexport default DayLengthPlugin;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport DayLengthPlugin from './day-length-plugin';\n\nReactDOM.render(<DayLengthPlugin />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\n"],"sourceRoot":""}