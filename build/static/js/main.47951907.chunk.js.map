{"version":3,"sources":["components/card/codap.ico","components/header/navigation.jsx","utils/util.js","components/header/dropdown-select.jsx","components/header/search-panel.jsx","components/header/header.jsx","components/card/card.jsx","components/card-list/card-list.jsx","components/footer/footer.jsx","App.js","serviceWorker.js","index.js"],"names":["module","exports","NavigationTabs","props","categoryDefinitions","categories","categoriesInUse","plugins","categoryArray","forEach","plugin","visible","category","includes","push","getCategories","map","e","filter","className","index","tip","c","key","categorySelected","onClick","handleCategorySelect","title","tooltip","DropdownSelect","handleChange","handleBranchSelect","bind","onSubmit","this","handleSubmit","value","branchSelected","onChange","React","Component","SearchPanel","state","onSearch","ev","searchString","target","type","placeholder","handleClear","Header","renderHeaderTitle","onCategorySelect","href","rel","src","alt","onBranchSelect","getURLRoot","window","location","origin","pathname","replace","Card","navigator","clipboard","writeText","cleanPath","renderPluginTitleAndDescription","copyToClipboard","role","aria-label","url","pluginPath","path","match","logo","renderHTML","description","parse","DOMPurify","sanitize","PureComponent","CardList","tabIndex","cardListWrapperClassNames","pluginsToShow","find","cat","sort","a","b","aLow","toLowerCase","bLow","Footer","renderInfoLinks","renderCCLogo","id","App","handleSearch","dataInteractives","dataInteractiveList","data_interactives","search","substr","findIndex","entry","setState","event","found","ix","indexOf","splice","length","aegis","pluginSearch","priorSelected","Boolean","hostname","ReactDOM","render","StrictMode","document","getElementById","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.47951907.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/codap.c02541ff.ico\";","import React from \"react\";\nimport PropTypes from 'prop-types';\nimport { getCategories } from \"../../utils/util\";\nimport \"./navigation.css\"\n\nexport const NavigationTabs = (props) => {\n  const categoryDefinitions = props.categories;\n  const categoriesInUse = getCategories(props.plugins);\n  const categories = categoryDefinitions.map(e => e.category)\n      .filter(category=>categoriesInUse.includes(category));\n\n  return (\n    <>\n      { categories && <div className=\"navigationTabs\">\n          {categories.map((category, index) => {\n            const tip = (categoryDefinitions.filter(c => c.category === category))[0];\n            return (\n              <div key={`${index}`}\n                   className={`tab theme${(index%4)+1} ${props.categorySelected === category ? \"selected\" : \"\"}`}\n                onClick={() => props.handleCategorySelect(category)} title={tip? tip.tooltip : \"\" }>\n                {category}\n              </div>\n            )\n          }\n          )}\n        </div>\n      }\n    </>\n  );\n}\n\nNavigationTabs.propTypes = {\n  handleCategorySelect: PropTypes.func,\n  plugins: PropTypes.array,\n  categories: PropTypes.any,\n  categorySelected: PropTypes.string,\n}\n","export function getCategories(plugins) {\n  let categoryArray = [];\n  \n  plugins.forEach(plugin => {\n    if (plugin.visible && plugin.visible !== \"false\"){\n      plugin.categories.forEach(category => {\n        if (!categoryArray.includes(category)) {\n          categoryArray.push(category)\n        }\n      })\n    }\n  })\n  return categoryArray;\n}\n\nexport function isDevMode() {\n  let queryParam = window.location.search.substr(1);\n  return queryParam.includes(\"dev\")\n}\n","import React from 'react';\n\nimport \"./dropdown-select.css\";\n\nexport class DropdownSelect extends React.Component {\n  constructor(props) {\n    super(props);\n    this.handleChange = this.props.handleBranchSelect.bind(this);\n  }\n\n  render() {\n    return (\n      <form onSubmit={this.handleSubmit}>\n        <label className=\"dropdownLabel\">\n          Select branch:\n        </label>\n        <select className=\"dropdownSelect\" value={this.props.branchSelected} onChange={this.handleChange}>\n          <option value=\"latest\">latest</option>\n          <option value=\"staging\">staging</option>\n          <option value=\"stable\">stable</option>\n          <option value=\"branch\">branch</option>\n        </select>\n      </form>\n    );\n  }\n}\n","import React from 'react';\n\nimport \"./search-panel.css\";\nimport PropTypes from \"prop-types\";\n\nexport class SearchPanel extends React.Component {\n  constructor() {\n    super();\n    this.state = {value: ''};\n  }\n\n  handleClear(/*ev*/) {\n    this.props.onSearch('');\n  }\n\n  handleChange(ev) {\n    let searchString = ev.target.value;\n    this.props.onSearch(searchString);\n  }\n\n  render() {\n    let placeholder='search for...';\n    let value = /*this.state.value*/this.props.searchString;\n\n    return (\n        <div className='search-panel' >\n          <input type={'text'} placeholder={placeholder} onChange={ev => this.handleChange(ev)} value={value} />\n          <button className={'search-panel-clear'} onClick={ev => this.handleClear(ev)}>&#x24E7;</button>\n        </div>\n    )\n  }\n}\n\nSearchPanel.propTypes = {\n  onSearch: PropTypes.func,\n  searchString: PropTypes.string,\n}\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { NavigationTabs } from \"./navigation\";\nimport { DropdownSelect } from \"./dropdown-select\";\nimport { SearchPanel } from \"./search-panel\";\n\nimport \"./header.css\"\n\nexport class Header extends React.Component {\n  render() {\n    return (\n      <div className=\"header\">\n        {this.renderHeaderTitle()}\n        <NavigationTabs plugins={this.props.plugins}\n                        categories={this.props.categories}\n                        categorySelected={this.props.categorySelected}\n                        handleCategorySelect={this.props.onCategorySelect} />\n      </div>\n    );\n  }\n\n  renderHeaderTitle() {\n    return (\n      <div className=\"headerTitle\">\n        <div className=\"headerLeft\">\n        <a href=\"https://codap.concord.org/\" title=\"CODAP Project\" target=\"_blank\" rel=\"noopener noreferrer\">\n          <img src=\"https://codap.concord.org/wp-content/themes/cc/img/codap-logo.png\" className=\"codap-logo\" alt=\"Common Online Data Analysis Program\" />\n        </a>\n        </div>\n        <div className=\"headerCenter\">\n          <span className=\"title\">CODAP Data Interactive Plugins</span>\n        </div>\n        <div className=\"headerRight\">\n          <SearchPanel onSearch={this.props.onSearch} searchString={this.props.searchString}/>\n          <DropdownSelect branchSelected={this.props.branchSelected} handleBranchSelect={this.props.onBranchSelect}/>\n        </div>\n      </div>\n\n    )\n  }\n}\nHeader.propTypes = {\n  plugins: PropTypes.array,\n  categories: PropTypes.any,\n  categorySelected: PropTypes.string,\n  onCategorySelect: PropTypes.func,\n  onSearch: PropTypes.func,\n  searchString: PropTypes.string,\n  branchSelected: PropTypes.string,\n  onBranchSelect: PropTypes.func\n}\n","import React from \"react\";\nimport DOMPurify from \"dompurify\";\nimport parse from \"html-react-parser\";\nimport logo from \"./codap.ico\";\n\nimport \"./card.css\"\nimport PropTypes from \"prop-types\";\n\nfunction getURLRoot() {\n  let urlRoot = window.location.origin+window.location.pathname;\n  return urlRoot.replace(/index.html$/, '').replace(/\\/build\\//, '');\n}\n\nexport class Card extends React.PureComponent{\n  copyToClipboard() {\n    navigator.clipboard.writeText(this.cleanPath());\n  }\n\n  render(){\n    let cardClassNames = `card`\n    return (\n      <div className={cardClassNames}>\n        {this.renderPluginTitleAndDescription()}\n        <div className=\"embeddableLink\" onClick={() => this.copyToClipboard()}>\n          copy link to clipboard\n          <span role={\"img\"} aria-label={\"Image of a clipboard\"}>&#x1F4CB;</span>\n        </div>\n    </div>\n    );\n  }\n\n  renderPluginTitleAndDescription() {\n    let { plugin, url } = this.props;\n    let pluginPath = \"\";\n    if (plugin.path.match(/^http/i)) {\n      pluginPath = plugin.path;\n    }\n    else {\n      pluginPath = getURLRoot()+plugin.path;\n    }\n    if (url.match(/^https/i) && !pluginPath.match(/^https/i)) {\n      pluginPath=pluginPath.replace(/http/i,'https');\n    }\n\n    if (pluginPath.match(/^https/i) && !url.match(/^https/i)) {\n      url=url.replace(/http/i,'https');\n    }\n\n    return (\n      <div >\n        <div title={\"Open in CODAP\"}>\n          <a href={`${url}?di=${pluginPath}`} className=\"pluginTitle\"\n             target=\"_blank\" rel=\"noopener noreferrer\">\n            <img src={logo}  alt={\"CODAP Logo\"}/>&nbsp;\n            {plugin.title}\n          </a>\n        </div>\n        <p className=\"pluginDescription\">{this.renderHTML(plugin.description)}</p>\n\n      </div>\n    );\n  }\n\n  renderHTML(description) {\n    return parse(DOMPurify.sanitize(description || \"\"));\n  }\n\n  cleanPath() {\n    const { plugin } = this.props;\n    let path = '';\n    let url=\"https://codap.concord.org/app/\"\n\n    if (plugin.path.match(/^http/i)) {\n      path = plugin.path;\n    }\n    else {\n      path = getURLRoot() + plugin.path;\n    }\n\n    if (url.match(/^https/i) && !path.match(/^https/i)) {\n      path = path.replace(/http/i, 'https');\n    }\n\n    if (path.match(/^https/i) && !url.match(/^https/i)) {\n      url = url.replace(/http/i, 'https');\n    }\n    return path;\n  }\n}\n\nCard.propTypes = {\n  plugin: PropTypes.object,\n  project: PropTypes.object,\n  url: PropTypes.string\n}\n","import React from \"react\";\nimport PropTypes from 'prop-types';\nimport { Card } from \"../card/card\";\n\nimport \"./card-list.css\";\n\nexport const CardList = props => {\n  let { plugins, categorySelected, url, tabIndex } = props;\n  let cardListWrapperClassNames = `card-list-wrapper theme${(tabIndex % 4) + 1}`\n  let pluginsToShow = plugins.filter(plugin =>\n          plugin.visible &&\n          plugin.visible!=='false' &&\n          (plugin.categories.find(cat => cat.replace(/\\..*/, '') === categorySelected))\n      ).sort(function (a, b) {\n        let aLow = a.title.toLowerCase();\n        let bLow = b.title.toLowerCase();\n        if (aLow < bLow) return -1;\n        if (aLow > bLow) return 1;\n        return 0;\n      });\n  return (\n    <div className={cardListWrapperClassNames}>\n      <div className=\"card-list\">\n        {pluginsToShow.map((plugin, index) =>\n          <Card key={index} plugin={plugin} url={url}/>\n        )}\n      </div>\n    </div>\n  )\n}\n\nCardList.propTypes = {\n  plugins: PropTypes.array,\n  categorySelected: PropTypes.string,\n  url: PropTypes.string,\n  tabIndex: PropTypes.number\n}\n","import React from 'react';\nimport \"./footer.css\"\n\nexport class Footer extends React.Component {\n\n  render() {\n    return (\n      <div className=\"footer\">\n        <div className=\"footerLeft\">\n          {this.renderInfoLinks()}\n        </div>\n        <div className=\"footerRight\">\n          {this.renderCCLogo()}\n        </div>\n      </div>\n    );\n  }\n\n  renderCCLogo() {\n    return (\n      <div id=\"cc\">\n        a product of\n        <div className=\"cc-logo\">\n          <a href=\"https://concord.org/\" title=\"The Concord Consortium - Revolutionary digital learning for science, math, and engineering\"><img src=\"https://codap.concord.org/_assets/img/cc-logo.png\" alt=\"The Concord Consortium\" />\n          </a>\n        </div>\n      </div>\n    )\n  }\n\n  renderInfoLinks() {\n    return (\n      <>\n        <p>CODAP plugin repository: <a target=\"blank\" href=\"https://github.com/concord-consortium/codap-data-interactives\"> github.com/concord-consortium/codap-data-interactives</a></p>\n        <p>CODAP project repository: <a target=\"blank\" href=\"https://github.com/concord-consortium/codap\"> github.com/concord-consortium/codap</a></p>\n        <p>To find out more about the CODAP project: <a target=\"blank\" href=\"https://concord.org/projects/codap\"> About CODAP</a></p>\n        <p>© Copyright 2021 <a href=\"https://concord.org/\" title=\"The Concord Consortium - Revolutionary digital learning for science, amth, and engineering\">The Concord Consortium</a>. All rights reserved.</p>\n      </>\n    )\n  }\n}\n","import React from 'react';\nimport dataInteractiveList from \"./data_interactive_map.json\";\nimport { Header } from \"./components/header/header\";\nimport { CardList } from \"./components/card-list/card-list\";\nimport { Footer } from \"./components/footer/footer\";\nimport { isDevMode } from \"./utils/util\";\n\n/**\n *\n * @param plugin {\n *      {description: string},\n *      {title: string},\n *      {aegis: string}\n *    }\n * @param searchString {string}\n * @return {boolean}\n */\nfunction pluginSearch(plugin, searchString) {\n  searchString = searchString.toLowerCase();\n  return (plugin.description && plugin.description.toLowerCase().includes(searchString)) ||\n      (plugin.title && plugin.title.toLowerCase().includes(searchString)) ||\n      (plugin.aegis && plugin.aegis.toLowerCase().includes(searchString));\n}\n\nexport default class App extends React.PureComponent {\n  constructor() {\n    super();\n    this.handleCategorySelect = this.handleCategorySelect.bind(this);\n    this.handleBranchSelect = this.handleBranchSelect.bind(this);\n    this.handleSearch = this.handleSearch.bind(this);\n    this.state = {\n      dataInteractives: dataInteractiveList.data_interactives,\n      categories: dataInteractiveList.categories,\n      categorySelected: \"Partners\",\n      branchSelected: isDevMode() ? \"staging\" : \"latest\",\n      searchString: ''\n    };\n  }\n\n  render() {\n    const codapBaseUrl = \"https://codap.concord.org\";\n    const plugins = this.state.dataInteractives;\n    const categories = this.state.categories;\n    const categorySelected = this.state.categorySelected;\n    const branchSelected = this.state.branchSelected;\n    const searchString = this.state.searchString;\n    let path;\n    switch (branchSelected) {\n      case \"latest\":\n        path = \"/releases/latest/\"\n        break;\n      case \"staging\":\n        path = \"/releases/staging/\"\n        break;\n      case \"stable\":\n        path = \"/app/\"\n        break;\n      case \"branch\":\n        path = \"/~jsandoe/build/\"\n        break;\n    }\n    const url = codapBaseUrl+path;\n    let tabIndex = categories.findIndex(entry => entry.category === categorySelected);\n\n    return (\n      <div className=\"App\">\n        <Header plugins={plugins}\n                categories={categories}\n                categorySelected={categorySelected}\n                branchSelected={branchSelected}\n                onCategorySelect={this.handleCategorySelect}\n                onBranchSelect={this.handleBranchSelect}\n                onSearch= {this.handleSearch}\n                searchString = {searchString}\n        />\n        <CardList plugins={plugins} categorySelected={categorySelected} url={url} tabIndex={tabIndex}/>\n        <Footer />\n      </div>\n    );\n  }\n\n  handleCategorySelect(category) {\n    this.setState({ categorySelected: category });\n  }\n\n  handleBranchSelect(event) {\n    this.setState({ branchSelected: event.target.value});\n  }\n\n  handleSearch (searchString) {\n    let found = false;\n    this.setState({searchString: searchString});\n    this.state.dataInteractives.forEach(plugin => {\n      let ix = plugin.categories.indexOf('Search');\n      if (ix >= 0) {\n        plugin.categories.splice(ix, 1);\n      }\n    });\n    if (searchString.length >= 3) {\n      this.state.dataInteractives.forEach(plugin => {\n        if (pluginSearch(plugin, searchString)) {\n          plugin.categories.push('Search');\n          found = true;\n        }\n      });\n    }\n    if (found && this.state.categorySelected !== 'Search') {\n      this.priorSelected = this.state.categorySelected;\n      this.setState({categorySelected: 'Search'})\n    } else if (!found && this.state.categorySelected === 'Search') {\n      this.setState({categorySelected: this.priorSelected});\n      this.priorSelected = null;\n    }\n  }\n}\n\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}